# Generated by Django 5.2.6 on 2025-10-01 12:01

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('studentcorner', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_form_no', models.CharField(max_length=50, unique=True)),
                ('u_registration_no', models.CharField(max_length=50, unique=True)),
                ('class_roll_no', models.CharField(max_length=15, unique=True)),
                ('course_name', models.CharField(max_length=200)),
                ('batch', models.CharField(max_length=50)),
                ('student_name', models.CharField(max_length=200)),
                ('parent_name', models.CharField(max_length=200)),
                ('mother_name', models.CharField(max_length=200)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('state', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('tehsil', models.CharField(blank=True, max_length=100, null=True)),
                ('constituency', models.CharField(blank=True, max_length=100, null=True)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField()),
                ('community', models.CharField(max_length=50)),
                ('mobile', models.CharField(max_length=15)),
                ('email_id', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('admission_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'students',
                'ordering': ['student_name'],
                'indexes': [models.Index(fields=['u_registration_no'], name='students_u_regis_e1fffc_idx'), models.Index(fields=['batch'], name='students_batch_14aa84_idx')],
            },
        ),
        migrations.CreateModel(
            name='StudentSemester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enrolled', models.BooleanField(default=True)),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('aec', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aec_enrollments', to='studentcorner.subject')),
                ('md1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='md1_enrollments', to='studentcorner.subject')),
                ('md2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='md2_enrollments', to='studentcorner.subject')),
                ('minor_course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='minor_enrollments', to='studentcorner.subject')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='studentcorner.semester')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='studentcorner.academicsession')),
                ('skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skill_enrollments', to='studentcorner.subject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semester_records', to='studentcorner.student')),
                ('vac1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vac1_enrollments', to='studentcorner.subject')),
                ('vac2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vac2_enrollments', to='studentcorner.subject')),
            ],
            options={
                'db_table': 'student_semesters',
                'ordering': ['session', 'semester'],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_type', models.CharField(choices=[('bonafide', 'Bonafide'), ('marks_sheet', 'Marks Sheet'), ('degree', 'Degree'), ('discharge_cum_character', 'Discharge cum Character'), ('character_not_passed', 'Character for Not Passed')], max_length=50)),
                ('certificate_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('student_name', models.CharField(max_length=200)),
                ('father_name', models.CharField(max_length=200)),
                ('registration_no', models.CharField(max_length=50)),
                ('class_roll_no', models.CharField(max_length=50)),
                ('session', models.CharField(max_length=50)),
                ('batch', models.CharField(max_length=50)),
                ('semester', models.CharField(max_length=50)),
                ('course_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField()),
                ('purpose', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('issued_by', models.CharField(blank=True, max_length=200, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='studentcorner.student')),
                ('student_semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='certificates', to='studentcorner.studentsemester')),
            ],
            options={
                'db_table': 'certificates',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentSubjectEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_enrollments', to='studentcorner.studentsemester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='studentcorner.subject')),
            ],
            options={
                'db_table': 'student_subject_enrollments',
            },
        ),
        migrations.AddIndex(
            model_name='studentsemester',
            index=models.Index(fields=['session', 'semester'], name='student_sem_session_ae9b6d_idx'),
        ),
        migrations.AddIndex(
            model_name='studentsemester',
            index=models.Index(fields=['student', 'session'], name='student_sem_student_1990f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentsemester',
            unique_together={('student', 'session', 'semester')},
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['student', '-issue_date'], name='certificate_student_565003_idx'),
        ),
        migrations.AddIndex(
            model_name='certificate',
            index=models.Index(fields=['issue_date'], name='certificate_issue_d_ce69c7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentsubjectenrollment',
            unique_together={('student_semester', 'subject')},
        ),
    ]
